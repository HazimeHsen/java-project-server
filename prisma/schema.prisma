generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String
  classes     ClassMember[]
  comments    Comment[]
  createdClasses ClassRoom[] @relation("CreatedClasses")
  fileUploads FileUpload[]
}

model ClassRoom {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  createdBy   Int
  creator     User         @relation(fields: [createdBy], references: [id], name: "CreatedClasses")
  members     ClassMember[]
  fileUploads FileUpload[]
}

model ClassMember {
  id         Int      @id @default(autoincrement())
  userId     Int
  classId    Int
  role       Role     @default(NORMAL)
  user       User     @relation(fields: [userId], references: [id])
  classRoom  ClassRoom @relation(fields: [classId], references: [id])
}

model FileUpload {
  id        Int      @id @default(autoincrement())
  filePath  String
  fileType  String  
  userId    Int
  classId   Int
  fileName  String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  class     ClassRoom @relation(fields: [classId], references: [id])
  comments  Comment[]
}

model Comment {
  id        Int    @id @default(autoincrement())
  content   String
  fileId    Int
  authorId  Int
  author    User   @relation(fields: [authorId], references: [id])
  file      FileUpload @relation(fields: [fileId], references: [id])
}

enum Role {
  ADMIN
  MODERATOR
  NORMAL
}
